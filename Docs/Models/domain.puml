@startuml

hide empty members

class Gasolinera {
    - String id
    - String rotulo
    - String cp
    - String direccion
    - String municipio
    - double gasoleoA
    - double gasolina95E5
    + getLocation() : Location
}

class GasolinerasResponse {
    - String fecha
    - String nota
    - String consulta

    + getPrecioPorTipo(FuelTypeEnum t)
    + getBrand(): BrandsEnum
    + getAverageGasPrice(): double
}

interface IFilter {
    + setFuelTypes(List<FuelTypeEnum>): IFilter
    + setBrands(List<BrandsEnum>): IFilter
    + setGasBrands(List<String>): IFilter
    + setMaxPrice(Float): IFilter
    + getFuelTypes(): List<FuelTypeEnum>
    + getBrands(): List<BrandsEnum>
    + getMaxPrice(): Float
    + toFilter(List<Gasolinera>): List<Gasolinera>
    + clear(): void
    + toCopy(): IFilter
}

class Filter {
    - List<FuelTypeEnum> fuelTypes
    - List<BrandsEnum> brands
    - List<String> gasBrands
    - Float maxPrice

    + setFuelTypes(List<FuelTypeEnum>): IFilter
    + setBrands(List<BrandsEnum>): IFilter
    + setGasBrands(List<String>): IFilter
    + setMaxPrice(Float): IFilter
    + toFilter(List<Gasolinera>): List<Gasolinera>
    + clear(): void
    + toCopy(): IFilter

    - typeFilter(Gasolinera): Boolean
    - brandsFilter(Gasolinera): Boolean
    - priceFilter(Gasolinera): Boolean
}

class OrderByPrice{
- FuelTypeEnum fuelType
- Boolean ascending

+ compare(Gasolinera g1, Gasolinera g2)  : int
}

class InterestPoint {
    - Int id
    - String name
    - Int colorArgb
    - Double latitude
    - Double longitude
    - Double radius
    - Date creationDate
    - Color color
    
    - inicializateData(String name, Color color, double latitude, double longitude, double radius)
    + getLocation() : Location
    + isGasStationInRadius(g: Gasoolinera) : boolean
}

IFilter <|.. Filter

Comparator <|-- OrderByPrice

GasolinerasResponse *-- "*" Gasolinera : gasolineras

@enduml