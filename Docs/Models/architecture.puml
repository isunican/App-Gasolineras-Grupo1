@startuml clases

hide empty members
skinparam linetype polyline
skinparam arrowLollipopColor #ADD1B2

MainView -right(0- MainPresenter : IMainContract.Presenter
MainView -right0)- MainPresenter : IMainContract.View
PointsView -right(0- PointsPresenter : IPointsContract.Presenter
PointsView -right0)- PointsPresenter  : IPointsContract.View
MainView -up..-> InfoView : <<use>>
MainView -left..> DetailsView : <<use>>
MainView -down..> PointsView : <<use>>
PointsView -..> MainView : <<use>>
MainPresenter -right(0- GasolinerasRepository : IGasolinerasRepository
PointsPresenter -right(0- InterestPointsDAO : IInterestPointsDAO

class MainPresenter {
    -load()
}

class PointsPresenter {
    -load()
}

interface IMainContract#View {
    + init()
    + getGasolinerasRepository() : IGasolinerasRepository
    + showStations(List<Gasolinera> stations)
    + showLoadCorrect(int stations)
    + showLoadError()
    + showInfoMessage(String message)
    + showStationDetails(Gasolinera station)
    + showInfoActivity()
    + showPointsActivity(boolean deleteActual)
    + showFiltersPopUp()
    + showFiltersPopUpFuelTypesSelector(List<Selection> selections)
    + showFiltersPopUpBrandSelector(List<Selection> selections)
    + updateFiltersPopupTextViewsSelections(String fuelTypes, String fuelBrands)
    + updateFiltersPopupTextViewsMaxPrice(float truncatedMaxPrice)
    + updateFiltersPopupSeekBarProgressMaxPrice(int progress, float minPriceLimit, float maxPriceLimit)
    + updateFiltersPopUpSelection(int position, boolean value)
    + closeActivePopUp()
    + showOrderPopUp(int typeIndex, int methodIndex)
    + getConstantString(int id) : String
    + showInterestPointInfo(InterestPoint ip, int loaded)
}

interface IMainContract#Presenter {
    + init(View view)
    + onStationClicked(Gasolinera station)
    + onMenuInfoClicked()
    + onPointsClicked()
    + onFiltersClicked()
    + onFiltersPopUpFuelTypesSelected()
    + onFiltersPopUpBrandsSelected()
    + onFiltersPopUpFuelTypesOneSelected(int index, boolean value)
    + onFiltersPopUpBrandsOneSelected(int index, boolean value)   
    + onFiltersPopUpFuelTypesAccepted()
    + onFiltersPopUpBrandsAccepted()
    + onFiltersPopUpMaxPriceSeekBarChanged(int progress)
    + onFiltersPopUpMaxPriceSeekBarLoaded()
    + onFiltersPopUpCancelClicked()
    + onFiltersPopUpAcceptClicked()
    + onFiltersPopUpClearFiltersClicked()
    + onOrderClicked()
    + onFuelTypeSelected(FuelTypeEnum type)
    + onMethodOrderSelected(OrderMethodsEnum orderMethod)
    + onOrderPopUpAcceptClicked()
    + onOrderPopUpCancelClicked()
    + onOrderPopUpClearClicked()
    + setTempFilter(IFilter f)
    + getTempFilter() : IFilter
    + setOrderByPrice(OrderByPrice o)
    + getOrderByPrice() : OrderByPrice
    + getFilter() : IFilter
    + getTempListSelection() : List<Selection>
    + calculateSeekbarProgress() : String
    + public method obtains the max price for all the gasStations when the view calls i
    + getMaxPrice() : double
    + public method obtains the min price for all the gasStations when the view calls i
    + getMinPrice() : double
}

interface IPointsContract#Presenter {
    + init(View view)
    + onHomeClicked()
    + onCreatePointOfInterestClicked()
    + onAcceptNewPointOfInterestClicked(InterestPoint newInterestPoint)
    + onPointOfInterestClicked(InterestPoint interestPoint)
    + onActivateDeleteModeClicked()
    + onCancelDeleteModeClicked()
    + onTrashIconClicked(int idSelectedPoint)
    + onConfirmDeletionClicked(int idSelectedPoint)    
}

interface IPointsContract#View {
    + init()
    + getPointsDao() : IInterestPointsDAO
    + showPoints(List<InterestPoint> points)
    + showLoadCorrect(int numPoints)
    + showLoadError()
    + showInfoMessage(String message)
    + showMainPage()
    + showPointOfInterestPopUp()
    + launchMainActivityWith(InterestPoint selectedIP)
    + showDeleteMode()
    + showNormalMode()
    + showDeleteConfirmationPopup(int idSelectedPoint)
}

interface IGasolinerasRepository {
    + requestGasolineras(ICallBack cb, String ccaa)
}

interface IInterestPointsDAO {
    + getInterestPoints() : List<InterestPoint>
    + getInterestPointByName(String name) : InterestPoint
    + getInterestPointById(int id) : InterestPoint       
    + addInterestPoint(InterestPoint interestPoint)      
    + deleteInterestPoint(InterestPoint interestPoint)   
    + updateInterestPoint(InterestPoint interestPoint)   
    + deleteAll()
}

interface IGasStationDAO {
    + getAll() : List<Gasolinera>
    + getGasStationById(int id) : Gasolinera
    + addGasStation(Gasolinera gasolinera)
    + deleteAll()
}

interface ICallBack {
    + onSuccess(List<Gasolinera> gasolineras)
    + onFailure(Throwable e)
}


@enduml